{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/deck.js","js/hand.js","js/helper.js","js/main.js"],"names":[],"mappings":"AAAA;;;;;;;;;ACAA;;;;;;;;IAEqB,I;AACnB,kBAAc;AAAA;;AACZ,QAAM,QAAQ,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,EAA8B,UAA9B,CAAd;AACA,QAAM,QAAQ,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,IAAzC,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,GAAzD,EAA8D,GAA9D,CAAd;AACA,QAAM,QAAQ,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,KAAjC,EAAwC,OAAxC,EAAiD,OAAjD,EAA0D,MAA1D,EACd,KADc,EACP,MADO,EACC,OADD,EACU,MADV,EACkB,KADlB,CAAd;;AAGA,SAAK,KAAL,GAAa,MAAM,MAAN,CAAa,UAAC,GAAD,EAAM,IAAN,EAAe;AACvC,YAAM,OAAN,CAAc,UAAC,IAAD,EAAO,KAAP,EAAiB;AAC7B,YAAI,IAAJ,CAAS,EAAC,MAAM,IAAP,EAAa,MAAM,IAAnB,EAAyB,MAAM,MAAM,KAAN,CAA/B,EAA6C,OAAO,QAAQ,CAA5D,EAAT;AACD,OAFD;AAGA,aAAO,GAAP;AACD,KALY,EAKV,EALU,CAAb;AAMD;;;;8BAES;AACR,uBAAO,QAAP,CAAgB,KAAK,KAArB;AACD;;;yBAEI,K,EAAO;AACV,WAAK,KAAL,CAAW,OAAX,CAAmB,UAAC,IAAD,EAAO,KAAP,EAAiB;AAClC,YAAI,OAAO,MAAM,QAAM,MAAM,MAAlB,CAAX;AACA,aAAK,IAAL,CAAU,IAAV;AACD,OAHD;AAID;;;;;;kBAxBkB,I;;;;;;;;;;;;;ICFA,I;AACnB,gBAAY,IAAZ,EAAkB;AAAA;;AAChB,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,KAAL,GAAa,EAAb;AACD;;;;2BAEM;AACL,aAAO,KAAK,KAAL,GAAa,KAAK,KAAL,CAAW,KAAX,EAAb,GAAkC,IAAzC;AACD;;;yBAEI,I,EAAM;AACT,WAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB;AACD;;;;;;kBAZkB,I;;;;;;;;ACArB,IAAM,SAAS;AACb,YAAU,kBAAS,KAAT,EAAgB;AACxB,QAAI,IAAI,MAAM,MAAd;AAAA,QAAsB,CAAtB;AAAA,QAAyB,CAAzB;AACA;AACA,WAAO,CAAP,EAAU;AACR;AACA,UAAI,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,GAA3B,CAAJ;AACA;AACA,UAAI,MAAM,CAAN,CAAJ;AACA,YAAM,CAAN,IAAW,MAAM,CAAN,CAAX;AACA,YAAM,CAAN,IAAW,CAAX;AACD;AACF;AAZY,CAAf;;kBAee,M;;;;;ACff;;;;AACA;;;;AACA;;;;;;AAEA,IAAM,OAAO,oBAAb;AACA,IAAI,QAAQ,CACV,mBAAS,QAAT,CADU,EAEV,mBAAS,UAAT,CAFU,CAAZ;;AAKA,IAAI,MAAM,KAAV;AACA,IAAI,OAAO,CAAX;AACA,IAAI,SAAS,CAAb;AACA,IAAI,WAAW,CAAf;AACA,IAAI,OAAO,EAAX;AACA,IAAI,aAAa,SAAS,aAAT,CAAuB,eAAvB,CAAjB;;AAEA,IAAM,QAAQ,SAAR,KAAQ,GAAW;AACvB;AACA,MAAI,QAAQ,KAAK,GAAL,CAAZ;AACA,OAAK,KAAL;AACA,MAAI,SAAS,QAAQ,KAAR,CAAb;AACA,MAAI,SAAS,OAAO,MAAP,GAAgB,CAAhB,GAAoB,IAApB,GAA2B,OAAO,CAAP,CAAxC;AACA,QAAM,CAAC,MAAP;AACA,MAAI,MAAJ,EAAY;AACV;AACA,WAAO,OAAO,MAAd;AACD;AACD;AACA,UAAQ,GAAR,CAAY,qBAAZ;AACD,CAbD;;AAeA,IAAM,OAAO,SAAP,IAAO,CAAS,GAAT,EAAc;AACzB,UAAQ,GAAR,CAAY,SAAZ;AACA,MAAI,GAAJ,EAAS,QAAQ,GAAR,CAAY,SAAZ;AACT,MAAI,GAAJ,EAAS;AACT,MAAI,GAAJ,EAAS;AACT,MAAI,QAAQ,MAAM,GAAN,CAAU,gBAAQ;AAC5B,WAAO;AACL,cAAQ,KAAK,IADR;AAEL,YAAM,KAAK,IAAL;AAFD,KAAP;AAID,GALW,CAAZ;AAMA,QAAM,OAAN,CAAc,gBAAQ;AAAE,SAAK,IAAL,CAAU,KAAK,IAAf;AAAuB,GAA/C;AACA,SAAO,KAAP;AACD,CAbD;;AAeA,IAAM,OAAO,SAAP,IAAO,CAAS,KAAT,EAAgB;AAC3B,UAAQ,GAAR,CAAY,SAAZ;AACA,QAAM,OAAN,CAAc,gBAAQ;AACpB,QAAI,OAAO,SAAS,aAAT,OAA2B,KAAK,MAAhC,YAAX;AACA,QAAI,qBAAmB,KAAK,IAAL,CAAU,IAA7B,GAAoC,KAAK,IAAL,CAAU,IAA9C,SAAJ;AACA,SAAK,KAAL,CAAW,eAAX,YAAoC,GAApC;AACD,GAJD;AAKD,CAPD;;AASA,IAAM,UAAU,SAAV,OAAU,CAAS,KAAT,EAAgB;AAC9B,UAAQ,GAAR,CAAY,WAAZ;AACA,MAAI,MAAM,KAAK,GAAL,CAAS,KAAT,CAAe,IAAf,EAAqB,MAAM,GAAN,CAAU;AAAA,WAAQ,KAAK,IAAL,CAAU,KAAlB;AAAA,GAAV,CAArB,CAAV;AACA,SAAO,MAAM,MAAN,CAAa,UAAC,GAAD,EAAM,IAAN,EAAe;AACjC,QAAI,KAAK,IAAL,CAAU,KAAV,KAAoB,GAAxB,EAA6B,IAAI,IAAJ,CAAS,IAAT;AAC7B,WAAO,GAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID,CAPD;;AASA,IAAM,QAAQ,SAAR,KAAQ,GAAW;AACvB,UAAQ,GAAR,CAAY,UAAZ;AACA,QAAM,OAAN,CAAc,gBAAQ;AACpB,SAAK,IAAL,CAAU,KAAK,IAAL,EAAV;AACD,GAFD;AAGD,CALD;;AAOA,IAAM,SAAS,SAAT,MAAS,CAAS,MAAT,EAAiB;AAC9B,UAAQ,GAAR,CAAY,WAAZ;AACA,UAAQ,GAAR,CAAY,OAAZ,EAAqB,KAAK,MAA1B;AACA,aAAW,KAAK,MAAL,GAAc,QAAd,GAAyB,KAAK,MAA9B,GAAuC,QAAlD;AACA,mBAAO,QAAP,CAAgB,IAAhB;AACA,QAAM,OAAN,CAAc,gBAAQ;AACpB,QAAI,KAAK,IAAL,KAAc,MAAlB,EAA0B;AACxB,aAAO,KAAK,MAAL,GAAc,CAArB,EAAwB;AACtB,aAAK,IAAL,CAAU,KAAK,KAAL,EAAV;AACD;AACF;AACF,GAND;AAOD,CAZD;;AAcA,IAAM,QAAQ,SAAR,KAAQ,GAAW;AACvB,UAAQ,GAAR,CAAY,UAAZ;AACA,QAAM,OAAN,CAAc,gBAAQ;AACpB,QAAI,OAAO,SAAS,aAAT,OAA2B,KAAK,IAAhC,aAAX;AACA,QAAI,KAAK,KAAL,CAAW,MAAX,KAAsB,CAA1B,EAA6B,MAAM,KAAK,IAAX;AAC7B,SAAK,SAAL,GAAiB,KAAK,KAAL,CAAW,MAAX,CAAkB,QAAlB,EAAjB;AACD,GAJD;AAKD,CAPD;;AASA,IAAM,QAAQ,SAAR,KAAQ,CAAS,MAAT,EAAiB;AAC7B,MAAI,SAAS,MAAM,MAAN,CAAa,UAAC,GAAD,EAAM,IAAN,EAAY,KAAZ,EAAsB;AAC9C,WAAO,KAAK,KAAL,CAAW,MAAX,KAAsB,CAAtB,GAA0B,KAA1B,GAAkC,GAAzC;AACD,GAFY,EAEV,CAFU,CAAb;AAGA,QAAM,MAAN,CAAa,MAAb,EAAqB,CAArB;AACA;AACD,CAND;;AAQA,IAAM,SAAS,SAAT,MAAS,GAAW;AACxB,MAAI,MAAM,MAAN,KAAiB,CAArB,EAAwB;AACtB,kBAAc,UAAd;AACA,QAAI,SAAS,MAAM,KAAN,EAAb;AACA,WAAO,OAAO,MAAd;AACA;AACA,YAAQ,GAAR,CAAY,OAAO,IAAnB,EAAyB,OAAzB;AACA,YAAQ,GAAR,CAAY,MAAZ,EAAoB,gBAApB;AACA,YAAQ,GAAR,CAAY,IAAZ,EAAkB,cAAlB;AACA,YAAQ,GAAR,CAAY,QAAZ,EAAsB,6BAAtB;AACD;AACF,CAXD;;AAaA,KAAK,OAAL;AACA,KAAK,IAAL,CAAU,KAAV;;AAEA;;AAEA,IAAI,mBAAJ;AACA,WAAW,gBAAX,CAA4B,OAA5B,EAAqC,KAArC;AACA,OAAO,gBAAP,CAAwB,OAAxB,EAAiC,eAAO;AACtC,MAAI,IAAI,OAAJ,KAAgB,EAApB,EAAwB;AACtB,QAAI,UAAJ,EAAgB,cAAc,UAAd;AAChB,iBAAa,YAAY,KAAZ,EAAmB,EAAnB,CAAb;AACD;AACF,CALD","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Helper from './helper';\n\nexport default class Deck {\n  constructor() {\n    const suits = ['hearts', 'clubs', 'spades', 'diamonds'];\n    const faces = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'j', 'q', 'k', 'a'];\n    const types = ['two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine',\n    'ten', 'jack', 'queen', 'king', 'ace'];\n\n    this.cards = suits.reduce((acc, suit) => {\n      faces.forEach((face, index) => {\n        acc.push({suit: suit, face: face, type: types[index], value: index + 1})\n      });\n      return acc;\n    }, []);\n  }\n\n  shuffle() {\n    Helper.shuffler(this.cards);\n  }\n\n  deal(hands) {\n    this.cards.forEach((card, index) => {\n      let hand = hands[index%hands.length];\n      hand.take(card);\n    });\n  }\n}","export default class Hand {\n  constructor(name) {\n    this.name = name;\n    this.cards = [];\n  }\n\n  play() {\n    return this.cards ? this.cards.shift() : null;\n  }\n\n  take(card) {\n    this.cards.push(card);\n  }\n}","const Helper = {\n  shuffler: function(cards) {\n    var m = cards.length, t, i;\n    // While there remain elements to shuffle\n    while (m) {\n      // Pick a remaining element\n      i = Math.floor(Math.random() * m--);\n      // And swap it with the current element\n      t = cards[m];\n      cards[m] = cards[i];\n      cards[i] = t;\n    }\n  }\n}\n\nexport default Helper;","import Deck from './deck';\nimport Hand from './hand';\nimport Helper from './helper';\n\nconst deck = new Deck();\nlet hands = [\n  new Hand('player'),\n  new Hand('computer')\n];\n\nlet war = false;\nlet wars = 0;\nlet rounds = 0;\nlet maxSwing = 0;\nlet pool = [];\nlet playerDeck = document.querySelector('.player .deck');\n\nconst round = function() {\n  rounds++;\n  let plays = play(war);\n  show(plays);\n  let result = resolve(plays);\n  let winner = result.length > 1 ? null : result[0];\n  war = !winner;\n  if (winner) {\n    // console.log(winner.player);\n    reward(winner.player);\n  }\n  count();\n  console.log('::=====-----=====::');\n}\n\nconst play = function(war) {\n  console.log('playing');\n  if (war) console.log('warring');\n  if (war) wager();\n  if (war) wars++;\n  let plays = hands.map(hand => {\n    return {\n      player: hand.name,\n      card: hand.play()\n    }\n  });\n  plays.forEach(play => { pool.push(play.card); });\n  return(plays);\n}\n\nconst show = function(plays) {\n  console.log('showing');\n  plays.forEach(play => {\n    let elem = document.querySelector(`.${play.player} .play`);\n    let img = `img/cards/${play.card.suit}${play.card.face}.png`;\n    elem.style.backgroundImage = `url(${img})`;\n  });\n}\n\nconst resolve = function(plays) {\n  console.log('resolving');\n  let max = Math.max.apply(Math, plays.map(play => play.card.value));\n  return plays.reduce((acc, play) => {\n    if (play.card.value === max) acc.push(play);\n    return acc;\n  }, []);\n}\n\nconst wager = function() {\n  console.log('wagering');\n  hands.forEach(hand => {\n    pool.push(hand.play());\n  });\n}\n\nconst reward = function(winner) {\n  console.log('rewarding');\n  console.log('swing', pool.length);\n  maxSwing = pool.length > maxSwing ? pool.length : maxSwing;\n  Helper.shuffler(pool);\n  hands.forEach(hand => {\n    if (hand.name === winner) {\n      while (pool.length > 0) {\n        hand.take(pool.shift());\n      }\n    }\n  })\n}\n\nconst count = function() {\n  console.log('counting');\n  hands.forEach(hand => {\n    let elem = document.querySelector(`.${hand.name} .count`);\n    if (hand.cards.length === 0) loser(hand.name);\n    elem.innerHTML = hand.cards.length.toString();\n  });\n}\n\nconst loser = function(player) {\n  let remove = hands.reduce((acc, hand, index) => {\n    return hand.cards.length === 0 ? index : acc;\n  }, 0);\n  hands.splice(remove, 1);\n  victor();\n}\n\nconst victor = function() {\n  if (hands.length === 1) {\n    clearInterval(intervalId);\n    let winner = hands.shift();\n    reward(winner.player);\n    count();\n    console.log(winner.name, 'wins!');\n    console.log(rounds, 'rounds played!');\n    console.log(wars, 'wars fought!');\n    console.log(maxSwing, 'was the highest card swing!');\n  }\n}\n\ndeck.shuffle();\ndeck.deal(hands);\n\ncount();\n\nlet intervalId;\nplayerDeck.addEventListener('click', round);\nwindow.addEventListener('keyup', evt => {\n  if (evt.keyCode === 32) {\n    if (intervalId) clearInterval(intervalId);\n    intervalId = setInterval(round, 50);\n  }\n})\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}